{"version":3,"sources":["assests/images/jim.jpg","assests/images/michael.jpg","assests/images/pam.jpg","assests/images/Angela.jpg","assests/images/toby.jpg","assests/images/dwight.jpg","assests/images/andy.jpg","assests/images/creed.jpg","components/Navbar.js","components/Header.js","components/Container.js","components/Counter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","react_default","a","createElement","Fragment","className","href","score","topScore","Header","Container","onClick","handleClick","id","src","jim","alt","michael","pam","angela","toby","dwight","andy","creed","Counter","state","handleIncrement","_this","setState","console","log","Navbar","this","components_Container","React","Component","App","components_Header","components_Counter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a081ebba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jim.eb621799.jpg\";","module.exports = __webpack_public_path__ + \"static/media/michael.9068b944.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pam.b1850744.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Angela.3b0cbc2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/toby.e99d832f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dwight.35406b7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/andy.ab845e0e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/creed.561de699.jpg\";","import React from \"react\";\n\nfunction NavBar(props) {\n    return (\n        <>\n\n        \n        <div className=\"flex-container\">\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n            <a className=\"navbar-brand\" href=\"/\">Click Game</a>\n            \n            <ul>\n            \n        \n            <li className=\"nav-item\">Click an image to begin!</li>\n\n            <li className=\"nav-item\">Score: {props.score} | Top Score: {props.topScore}</li>\n\n\n\n        </ul>\n        \n        </nav>\n        </div>\n        </>\n    );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction Header() {\n    return (\n        <>\n        <div className=\"jumbotron\">\n  <h1 className=\"display-4\">The Office Click Game!</h1>\n  <h2 className=\"lead\">Click on an image to earn points, but don't click on any more than once!</h2>\n  \n  \n  \n    \n \n</div>\n        \n        \n        </>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport jim from \"../assests/images/jim.jpg\";\nimport michael from \"../assests/images/michael.jpg\";\nimport pam from \"../assests/images/pam.jpg\";\nimport angela from \"../assests/images/Angela.jpg\";\nimport toby from \"../assests/images/toby.jpg\";\nimport dwight from \"../assests/images/dwight.jpg\";\nimport andy from \"../assests/images/andy.jpg\";\nimport creed from \"../assests/images/creed.jpg\";\nimport Counter from \"./Counter\";\n\nfunction Container(props) {\n    return (\n        <>\n        <div onClick={() => props.handleClick()} id =\"property1\">\n        <img src={jim} alt=\"jim\"  />\n\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property2\">\n        <img src={michael} alt=\"michael\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property3\">\n        <img src={pam} alt=\"pam\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property4\">\n        <img src={angela} alt=\"jim\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property5\">\n        <img src={toby} alt=\"toby\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property5\">\n        <img src={dwight} alt=\"dwight\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property6\">\n        <img src={andy} alt=\"andy\" />\n        </div>\n        <div onClick={() => props.handleClick()} id =\"property7\">\n        <img src={creed} alt=\"creed\" />\n        </div>\n        </>\n    );\n}\n\nexport default Container;","import Container from \"./Container\";\nimport React from \"react\";\nimport NavBar from \"./Navbar\";\n\nclass Counter extends React.Component  {\n    // Setting the initial state of the Counter component\n    state = {\n      score: 0,\n      topScore: 0\n    };\n  \n    // handleIncrement increases this.state.count by 1\n    handleIncrement = () => {\n      // We always use the setState method to update a component's state\n      this.setState({ score: this.state.score + 1 });\n      this.setState({ topScore: this.state.topScore + 1 });\n      console.log(\"Got clicked!!!!\");\n      \n    };\n\n\n  \n    \n  \n    // The render method returns the JSX that should be rendered\n    render() {\n      return (\n        <>\n        <nav>\n          <NavBar score= {this.state.score} topScore={this.state.topScore} />\n        </nav>\n        <div className=\"img\">\n        <Container handleClick= {this.handleIncrement} />\n        </div>\n        </>\n      );\n    }\n  }\n  \n  export default Counter;","import React, { Component } from 'react';\nimport NavBar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Counter from \"./components/Counter\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      \n     <header>\n     <Header />\n     </header>\n     <main>\n       <Counter />\n     </main>\n     \n    \n\n     </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
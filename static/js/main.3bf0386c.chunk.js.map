{"version":3,"sources":["components/Navbar/Navbar.js","components/Header/Header.js","components/Item/Item.js","components/Footer/Footer.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","messageClass","message","score","topscore","Header","Item","_ref","name","image","onClick","src","alt","Footer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","topScore","maxScore","Office","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleCorrectSelection","setState","handleResetWin","currentOffice","map","ch","objectSpread","isClicked","handleIncorrectSelection","handleShuffleChararcters","resetNeeded","handleRenderOffice","character","components_Item_Item","key","id","bind","assertThisInitialized","components_Navbar_Navbar","components_Header_Header","components_Footer_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3bf0386c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Navbar/Navbar.css\";\n\nconst Navbar = (props) => (\n  <nav className=\"navbar\">\n    <ul>\n      <li className=\"brand\">\n        <a href=\"/\">Click Game</a>\n      </li>\n      <li className={props.messageClass}>{props.message}</li>\n      \n      <li>Score: {props.score} | Top Score: {props.topscore}</li></ul>\n  </nav>\n\n);\n\nexport default Navbar;\n","\nimport React from \"react\";\nimport \"../Header/Header.css\";\n\nconst Header = () => (\n   <header className=\"header\">\n   \t<h1>The Office Click Game!</h1>\n   \t<h2>Click on an image to earn points, but don't click on any more than once!</h2>\n   </header>\n);\nexport default Header;","import React from 'react';\nimport \"../Item/Item.css\";\n\nconst Item = ({name, image, onClick}) =>\n\t\t\t<img \n\t\t\t\tclassName=\"click-item\"\n\t\t\t\tsrc={image}\n\t\t\t\talt={name}\n\t\t\t\tname={name}\n\t\t\t\tonClick={ () => onClick(name) }\n\t\t\t/>;\n\n\nexport default Item;","\nimport React from \"react\";\nimport \"../Footer/Footer.css\";\n\nconst Footer = () => (\n\t<footer className=\"footer\">\n\t\t<div className=\"footer-bottom\">\n\t\t\tThe Office Click Game! \n\t\t\t\n\t\t</div>\n\t</footer>\n\n);\n\nexport default Footer;","import React, { Component } from 'react';\nimport Navbar from '../src/components/Navbar/Navbar';\nimport Header from '../src/components/Header/Header';\nimport Item from '../src/components/Item/Item';\nimport Footer from '../src/components/Footer/Footer';\nimport Office from \"./office.json\";\nimport './App.css';\n\nclass App extends Component {\n  // Setting the initial state of the App component\n  constructor(){\n    super()\n\n    this.handleShuffleChararcters = this.handleShuffleChararcters.bind(this)\n  }\n\n  state = {\n    score: 0,\n    topScore: 0,\n    maxScore: 12,\n    message: \"Click an image to begin!\",\n    messageClass: \"\",\n    Office: Office\n  };\n\n  shuffle = (array) => {\n    let currentIndex = array.length;\n    let temporaryValue;\n    let randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleCorrectSelection = () => {\n    \n    if (this.state.score+1 > this.state.topScore) {\n      this.setState({topScore: this.state.topScore+1})\n    }\n    if (this.state.score+1 === this.state.maxScore) {\n      this.setState({score: this.state.score+1, message: \"Congrats! You win!\", messageClass:\"correct\"})\n    }else{\n      this.setState({score: this.state.score+1, message: \"You guessed correctly!\", messageClass:\"correct\"})\n    }\n  }\n\n  handleResetWin = (currentOffice) => {\n    //if current score is at max reset score to 0 and topscore to 0\n    if (this.state.score+1 === this.state.maxScore) {\n      this.setState({score: 0, topScore: 0})\n      //reset clicked state for Office\n      const updatedOffice = currentOffice.map(ch => (true) ? { ...ch, isClicked: false } : ch)\n      return updatedOffice\n    }else{\n      return currentOffice\n    }\n  }\n\n  handleIncorrectSelection = () => {\n    //incorrect selection made, reset score to 0\n    this.setState({score: 0, message: \"You guessed incorrectly!\"})\n    //reset clicked state for Office\n    const updatedOffice = this.state.Office.map(ch => ch.isClicked === true ? { ...ch, isClicked: false } : ch)\n    return updatedOffice\n  }\n\n\n  handleShuffleChararcters = (name) => {\n    // this.handleResetWin();\n    var resetNeeded = false;\n    const Office = this.state.Office.map(ch => {\n      //ch.name === name ? { ...ch, isClicked: true } : ch\n      if(ch.name === name) {\n        if (ch.isClicked === false) {\n          this.handleCorrectSelection()\n          return { ...ch, isClicked: true}\n        }else{\n          resetNeeded = true\n          return { ...ch, isClicked: false}\n        }\n      }\n      return ch\n    })\n\n    if (resetNeeded) {\n      this.setState({\n        Office: this.shuffle(this.handleIncorrectSelection()),\n        messageClass:\"incorrect\"\n      })\n      \n    }else{\n      //check if game is won before rendering Office\n      this.setState({ Office: this.shuffle(this.handleResetWin(Office)) })\n    }\n    \n  }\n\n  handleRenderOffice = () => {\n    return this.state.Office.map((character) =>\n            <Item \n              image={character.image} \n              name={character.name} \n              key={character.id} \n              onClick={this.handleShuffleChararcters} \n            />\n          );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          score={this.state.score}\n          topscore={this.state.topScore}\n          message={this.state.message}\n          messageClass={this.state.messageClass}\n        />\n        <Header />\n        <div className=\"content\">\n          {this.handleRenderOffice()}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}